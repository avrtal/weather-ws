<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
  	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
			      
	<!-- cache part - annotation driven -->
	
   	<cache:annotation-driven />
	
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
	    <property name="caches">
		    <set>
		        <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="weatherCache"/>
		    </set>
	    </property>
	</bean>
	
	<!-- beans shared for each context -->
	
	<bean id="service" class="com.tieto.weather.service.impl.WeatherServiceCachedSimple">
		<property name="wundergroundResponseMapper">
			<bean class="com.tieto.weather.mapper.impl.WundergroundResponseMapper" />
		</property>
		<property name="cities" ref="cities"/>
		<property name="apikey" value="${apikey}"/>
		<property name="urlString" value="${urlString}"/>
		<property name="restTemplate" ref="restTemplate"/>
	</bean>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<bean id="messageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
					<property name="unmarshaller" ref="xmlMarshaller" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="xmlMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="packagesToScan">
			<list>
				<value>com.tieto.weather.wunderground.schema</value>
			</list>
		</property>
		<property name="schema" value="classpath:/wunderground.xsd" />
	</bean>
	
	<bean id="weatherObjectFactory" class="com.tieto.weather.schema.ObjectFactory" />
	
	<!-- scheduler + configuration -->
	
	<bean id="wundergroundScheduler" class="com.tieto.weather.scheduler.WeatherScheduler" init-method="readWeathers">
		<constructor-arg name="weatherService" ref="service"/>
		<constructor-arg name="cities" ref="cities"/>
	</bean>	
	
	<task:scheduled-tasks>
		<task:scheduled ref="wundergroundScheduler" method="readWeathers" initial-delay="${cache.time}" fixed-rate="${cache.time}"/>
	</task:scheduled-tasks>
	
	<!-- properties placeholder -->
	
	<context:property-placeholder location="classpath:config.properties"/>

	<bean id="cities" class="com.tieto.weather.vo.CitiesVO">
		<constructor-arg>
		  <map>
			  <entry key="${city1.name}" value="${city1.country}"/>
			  <entry key="${city2.name}" value="${city2.country}"/>
			  <entry key="${city3.name}" value="${city3.country}"/>
			  <entry key="${city4.name}" value="${city4.country}"/>
		  </map>
 		 </constructor-arg>
	</bean>
	
	<!-- http authentication -->
	
	<security:http auto-config="true">
		<security:intercept-url pattern="/**" access="ROLE_USER"/>
		<security:http-basic/>
	</security:http>
	
	<security:authentication-manager>
     <security:authentication-provider>
         <security:user-service>
              <security:user name="weather" password="w34th3r" authorities="ROLE_USER" />
              </security:user-service>
     </security:authentication-provider>
	</security:authentication-manager>
	
	<!-- loging functionality -->
	
	<bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="targetClass" value="org.springframework.util.Log4jConfigurer"/>
	    <property name="targetMethod" value="initLogging"/>
	    <property name="arguments">
	        <list>
	            <value>classpath:log4j.xml</value>
	        </list>
	    </property>
	</bean>
	
</beans>